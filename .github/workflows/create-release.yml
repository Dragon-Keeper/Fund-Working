name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'V*.*.*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get release version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: generate_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ steps.get_version.outputs.version }}^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            # 如果没有之前的标签，获取所有提交
            RELEASE_NOTES=$(git log --pretty=format:"- %s (%an)" HEAD)
          else
            # 获取两个标签之间的提交
            RELEASE_NOTES=$(git log --pretty=format:"- %s (%an)" $PREVIOUS_TAG..${{ steps.get_version.outputs.version }})
          fi
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
          body: |
            # ${{ steps.get_version.outputs.version }}

            ## 更新内容
            ${{ steps.generate_notes.outputs.release_notes }}

            ## 下载链接
            请下载下方附件使用本版本。
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          files: |
            *.py
            *.md
            *.txt
            requirements.txt
            !.gitignore
          append_body: false